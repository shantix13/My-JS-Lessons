// Деструктуризация

let age = 16,
    height = 200,
    grade = 3;

// аналогично деструктуризацией можно записать так.

let [age, height, grade] = [16, 200, 3];

// Значение по умолчанию.

let [age, height, grade = 8] = [16, 200];

// либо 

let [age, height, grade = 8] = [16, 200,];

// Неприсвоенная переменная получит undefined

// можно быстро менять местами две переменные

let [a, b] = [b, a];

// Деструктуризация объекта

const desctructObj = { name: 'Player', x: 50, y: 60 };

const { name, x, y } = desctructObj;

console.log(name, x, y);

// Оператор spread/rest - троеточие ...
let [age, height, ...rest] = [16, 32, 'axax', 'fsdgd', '123', 123];

// Все необъявленные в деструкте значения будут помещены в отдельный массив. Это spread

console.log(rest); // Выведет ['axax', 'fsdgd', '123', 123];

// Когда он применяется к параметрам функции - это rest оператор.
// rest - объединяет все параметры в один массив
// spread - разбирает массив на переменные.

// пример конкатинации массивов с помощью оператора spread

const numbers = [22, 33, 44, 55, 77];
const letters = ['a', 'g', 't', 'u', 'h'];

const concat = [...numbers, ...letters];
// получим [22, 33, 44, 55, 77, 'a', 'g', 't', 'u', 'h'];

